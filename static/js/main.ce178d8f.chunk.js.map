{"version":3,"sources":["components/Navbar/MenuItems.js","components/Button.js","components/Navbar/Navbar.js","components/SpansView/Segment.js","components/SpansView/SpansView.js","components/SummaryView/SummaryView.js","components/QAView/QAView.js","components/SpeakerView/SpeakerView.js","components/AboutView/AboutView.js","components/DataContainer/DataContainer.js","components/AudioSelector/AudioSelector.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItems","title","url","cName","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Navbar","state","clicked","handleClick","setState","this","map","item","index","to","Component","Segment","props","id","text","SpansView","useState","selectedId","setSelectedId","audioData","useEffect","fuzzyArrayContains","array","value","i","length","segment","idx","filter","e","join","SummaryView","QAView","SpeakerView","AboutView","DataContainer","setAudioData","audioName","fetch","headers","then","response","json","data","catch","error","console","log","path","AudioSelector","selectedAudio","name","onChange","target","audios","audio","App","handleChange","selectedAudioData","AudioIndexData","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce178d8f.chunk.js","sourcesContent":["export const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/uist-2021',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Summary',\r\n        url: '/uist-2021/data/summary',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title:  'Spans',\r\n        url: '/uist-2021/data/spans',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title:  'Q&A',\r\n        url: '/uist-2021/data/qa',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title:  'Speakers',\r\n        url: '/uist-2021/data/speaker',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title:  'About Us',\r\n        url: '/uist-2021/static/about',\r\n        cName: 'nav-links-mobile'\r\n    },\r\n]","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--medium',\r\n    'btn--large'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return(\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport { Button } from \"../Button\"\r\nimport './Navbar.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n    state = { clicked: false }\r\n    \r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"NavbarItems\">\r\n                <h1 className=\"navbar-logo\">Contoso <i className=\"fab fa-affiliatetheme\"></i></h1>\r\n                <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n                </div>\r\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                    {MenuItems.map( (item, index) => {\r\n                        return(\r\n                            <li key={index} className={item.cName}>\r\n                                <NavLink to={item.url}>{item.title}</NavLink>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Button>\r\n                    <NavLink to=\"/static/about\">About Us</NavLink>\r\n                </Button>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\n\r\nfunction Segment(props) {\r\n    return (\r\n        <div className=\"Segment\">\r\n            <div className = \"SegmentDataContainer\">\r\n                <div className=\"SegmentIdContainer\">\r\n                    <p className=\"SegmentIdText\">{props.id}</p>\r\n                </div>\r\n                <div className=\"SegmentTextContainer\">\r\n                    <p className=\"SegmentTextText\">{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Segment","import React, { useState, useEffect } from 'react'\r\nimport Segment from './Segment'\r\nimport \"./SpansView.css\"\r\n\r\nfunction SpansView(props) {\r\n    const [selectedId, setSelectedId] = useState(null)\r\n\r\n    // reset selectedId on audioData change\r\n    let { audioData } = props;\r\n    useEffect(() => setSelectedId(null), [audioData])\r\n\r\n    const fuzzyArrayContains = (array, value) => {\r\n        for(let i = 0; i < array.length; i++) {\r\n            // eslint-disable-next-line\r\n            if (array[i] == value) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (!props.audioData) {\r\n        return (\r\n            <div>\r\n                <h1>Spans View</h1>\r\n                <p>No audio sample selected</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Spans View</h1>\r\n            <div className=\"SegmentColumnContainer\">\r\n                <div className=\"SegmentColumn\">\r\n                    <div className=\"ColumnTitleContainer\">\r\n                        <h2 className=\"ColumnTitle\">Raw Transcript</h2>\r\n                    </div>\r\n                    {props.audioData?.[\"raw\"][\"segments\"].map((segment, idx) =>\r\n                        <div key={idx} onClick={() => setSelectedId(segment.id)} className={segment.id === selectedId ? \"selected\" : \"\"}>\r\n                            <Segment text={segment.text} id={segment.id}></Segment>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"SegmentColumn notclickable\">\r\n                    <div className=\"ColumnTitleContainer\">\r\n                        <h2 className=\"ColumnTitle\">Low Pass</h2>\r\n                    </div>\r\n                    {props.audioData?.[\"low\"][\"segments\"]\r\n                        .filter(e => fuzzyArrayContains(e.id, selectedId))\r\n                        .map((segment, idx) => <div key={idx} className=\"selected\"><Segment text={segment.text} id={segment.id.join(\", \")}></Segment></div>)}\r\n                </div>\r\n                <div className=\"SegmentColumn notclickable\">\r\n                    <div className=\"ColumnTitleContainer\">\r\n                        <h2 className=\"ColumnTitle\">Medium Pass</h2>\r\n                    </div>\r\n                    {props.audioData?.[\"med\"][\"segments\"]\r\n                        .filter(e => fuzzyArrayContains(e.id, selectedId))\r\n                        .map((segment, idx) => <div key={idx} className=\"selected\"><Segment text={segment.text} id={segment.id.join(\", \")}></Segment></div>)}\r\n                </div>\r\n                <div className=\"SegmentColumn notclickable\">\r\n                    <div className=\"ColumnTitleContainer\">\r\n                        <h2 className=\"ColumnTitle\">High Pass</h2>\r\n                    </div>\r\n                    {props.audioData?.[\"high\"][\"segments\"]\r\n                        .filter(e => fuzzyArrayContains(e.id, selectedId))\r\n                        .map((segment, idx) => <div key={idx} className=\"selected\"><Segment text={segment.text} id={segment.id.join(\", \")}></Segment></div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpansView\r\n","import React, { Component } from 'react';\r\n\r\nclass SummaryView extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>SummaryView</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SummaryView","import React, { Component } from 'react';\r\n\r\nclass QAView extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>QAView</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default QAView","import React, { Component } from 'react';\r\n\r\nclass SpeakerView extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>SpeakerView</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpeakerView","import React, { Component } from 'react';\r\n\r\nclass AboutView extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>AboutView</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutView","import React, { useState, useEffect } from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport SpansView from \"../SpansView/SpansView\"\r\nimport SummaryView from \"../SummaryView/SummaryView\"\r\nimport QAView from \"../QAView/QAView\"\r\nimport SpeakerView from \"../SpeakerView/SpeakerView\"\r\nimport './DataContainer.css'\r\nimport AboutView from '../AboutView/AboutView'\r\n\r\n\r\nfunction DataContainer(props) {\r\n    const [audioData, setAudioData] = useState(null)\r\n\r\n    // fetch data on audioName change\r\n    let { audioName } = props;\r\n    useEffect(() => {\r\n        if (!audioName) return;\r\n\r\n        const fetchData = () => {\r\n            fetch(`../data/${audioName}.json`, {\r\n                headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setAudioData(data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        };\r\n        \r\n        fetchData();\r\n    }, [audioName]);\r\n\r\n    return (\r\n        <div className=\"DataContainer\">\r\n            <Switch>\r\n                <Route path=\"/uist-2021/data/summary\">\r\n                    <SummaryView className=\"SpansView\" audioName={props.audioName} audioData={audioData}/>\r\n                </Route>\r\n                <Route path=\"/uist-2021/data/spans\">\r\n                    <SpansView className=\"SpansView\" audioName={props.audioName} audioData={audioData}/>\r\n                </Route>\r\n                <Route path=\"/uist-2021/data/qa\">\r\n                    <QAView className=\"SpansView\" audioName={props.audioName} audioData={audioData}/>\r\n                </Route>\r\n                <Route path=\"/uist-2021/data/speaker\">\r\n                    <SpeakerView className=\"SpansView\" audioName={props.audioName} audioData={audioData}/>\r\n                </Route>\r\n                <Route path=\"/uist-2021/static/about\">\r\n                    <AboutView />\r\n                </Route>\r\n                <Route path=\"/uist-2021\">\r\n                    <p>Home</p>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataContainer","import React, { Component } from 'react';\r\nimport './AudioSelector.css'\r\n\r\nclass AudioSelector extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AudioSelectionContainer\">\r\n                <p className=\"CurrentAudioLabel\">Currently Analyzing Audio: <strong>{!this.props.selectedAudio ? <samp className=\"NoAudioSelectedText\">No Audio Selected</samp> : this.props.selectedAudio}</strong></p>\r\n                <div>\r\n                    <label className=\"SelectAudioLabel\">Select an Audio:</label>\r\n                    <select \r\n                        className=\"AudioSelector\"\r\n                        name=\"AudioSelect\"\r\n                        onChange={e => this.props.onChange(e.target.value)}\r\n                    >\r\n                        {this.props.audios.map((audio) => (\r\n                            <option key={audio.id}>\r\n                            {audio.value}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioSelector","import Navbar from \"./components/Navbar/Navbar\"\nimport DataContainer from \"./components/DataContainer/DataContainer\"\nimport AudioSelector from \"./components/AudioSelector/AudioSelector\"\nimport AudioIndexData from \"./data/index.json\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport './App.css';\nimport React from \"react\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audios: AudioIndexData,\n      selectedAudio: \"\"\n    }\n  }\n\n  handleChange = audio => {\n    if (audio === \"\") {\n        this.setState({ selectedAudio: \"\"})\n        this.setState({ selectedAudioData: \"\"})\n        return;\n    }\n\n    this.setState({ selectedAudio: audio });\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Router>\n          <Navbar/>\n          <AudioSelector audios={this.state.audios} selectedAudio={this.state.selectedAudio} onChange={this.handleChange} />\n          <DataContainer audioName={this.state.selectedAudio}/>\n        </Router>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}